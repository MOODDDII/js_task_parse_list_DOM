{"mappings":"AAAA;AAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,OAAO,SAAS,aAAa,CAAC;IAEpC,MAAM,cAAc,CAAC;QACnB,MAAM,QAAQ,UAAU,KAAK,CAAC;QAC9B,MAAM,WAAW,MAAM,MAAM,CAAC,CAAC,OAAS,SAAS,OAAO,SAAS;QAEjE,OAAO,WAAW,SAAS,IAAI,CAAC;IAClC;IAEA,MAAM,WAAW,CAAC;QAChB,MAAM,aAAa,MAAM,IAAI,CAAC,UAAU,gBAAgB,CAAC;QAEzD,WAAW,IAAI,CACb,CAAC,GAAG,IAAM,YAAY,EAAE,OAAO,CAAC,MAAM,IAAI,YAAY,EAAE,OAAO,CAAC,MAAM;QAExE,WAAW,OAAO,CAAC,CAAC,OAAS,UAAU,WAAW,CAAC;IACrD;IAEA,SAAS;AACX","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const list = document.querySelector('ul');\n\n  const parseSalary = (salaryStr) => {\n    const parts = salaryStr.split('');\n    const filtered = parts.filter((char) => char !== '$' && char !== ',');\n\n    return parseFloat(filtered.join(''));\n  };\n\n  const sortList = (ulElement) => {\n    const itemsArray = Array.from(ulElement.querySelectorAll('li'));\n\n    itemsArray.sort(\n      (a, b) => parseSalary(b.dataset.salary) - parseSalary(a.dataset.salary),\n    );\n    itemsArray.forEach((item) => ulElement.appendChild(item));\n  };\n\n  sortList(list);\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}